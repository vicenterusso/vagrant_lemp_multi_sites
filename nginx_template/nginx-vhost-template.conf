server {

	charset utf-8;
	listen   80;
	sendfile off;
	
	root /vagrant/sites/{{DOMAIN}};
	index index.html index.php;
	
	
	access_log  /vagrant/sites/{{DOMAIN}}/access.log main;
	error_log  /vagrant/sites/{{DOMAIN}}/error.log warn;
	
	server_name local.{{DOMAIN}};
	
	location / {
		index  index.html index.php;
		try_files $uri $uri/ /index.php?$args;
		if (!-e $request_filename){
			rewrite ^(.*)$ /index.php;
		}
	}
	
	location /publisher {
		alias /vagrant/sites/{{DOMAIN}}/publisher;
		index index.php;
		try_files $uri $uri/ /publisher/index.php?$args;
		if (!-e $request_filename){
				rewrite ^(.*)$ /publisher/index.php;
		}
	}


	location ~ ^/(protected|framework|themes/\w+/views) {
		deny  all;
	}
	
	
	# pass the PHP scripts to FastCGI server listening on 127.0.0.1:9000
	#
	location ~ \.php {
		fastcgi_split_path_info  ^(.+\.php)(.*)$;
	
		#let yii catch the calls to unexising PHP files
		if (-f $document_root$fastcgi_script_name){
			set $fsn $fastcgi_script_name;
		}
	
		fastcgi_pass unix:/var/run/php5-fpm.sock;
		include fastcgi_params;
		fastcgi_param  SCRIPT_FILENAME  $document_root$fsn;
	
		#PATH_INFO and PATH_TRANSLATED can be omitted, but RFC 3875 specifies them for CGI
		fastcgi_param  PATH_INFO        $fastcgi_path_info;
		fastcgi_param  PATH_TRANSLATED  $document_root$fsn;
	}

	# prevent nginx from serving dotfiles (.htaccess, .svn, .git, etc.)
	location ~ /\. {
		deny all;
		access_log off;
		log_not_found off;
	}

	
	# pass the PHP scripts to FastCGI server listening on /tmp/php5-fpm.sock
	#
	location ~ \.php$ {
		try_files $uri =404;
		fastcgi_split_path_info ^(.+\.php)(/.+)$;
		fastcgi_pass unix:/var/run/php5-fpm.sock;
		fastcgi_index index.php;
		include fastcgi_params;
	}
	
	# deny access to .htaccess files, if Apache's document root
	# concurs with nginx's one
	
	location ~ /\.ht {
		deny all;
	}
  
}